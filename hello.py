from flask import Flask
from flask import render_template
from dotenv import load_dotenv
import os
import pandas


app = Flask(__name__)


@app.route("/")
def hello_world():
    
    load_dotenv(".env")
    k = os.environ.get("MAPS_KEY")
    return render_template("index.html", dik=k)
lazy = {'00': [(51.53582, -0.28695587, 1.0), (51.537268, -0.31685046, 1.0), (51.541773, -0.27591674, 1.0), (51.542644, -0.30487014, 1.0), (51.546601, -0.26794617, 2.6), (51.55148, -0.28362712, 1.0), (51.560843, -0.31977446, 1.0), (51.560904, -0.25614982, 1.0), (51.562649, -0.32028499, 1.0), (51.563487, -0.27884677, 1.0), (51.564041, -0.26151241, 1.0), (51.564162, -0.24309773, 1.0), (51.565517, -0.27011313, 1.0), (51.566546, -0.24677173, 10.0)], '01': [(51.53582, -0.28695587, 1.0), (51.537268, -0.31685046, 1.0), (51.541773, -0.27591674, 1.0), (51.542644, -0.30487014, 1.0), (51.546601, -0.26794617, 2.6), (51.55148, -0.28362712, 1.0), (51.560843, -0.31977446, 1.0), (51.560904, -0.25614982, 1.0), (51.562649, -0.32028499, 1.0), (51.563487, -0.27884677, 1.0), (51.564041, -0.26151241, 1.0), (51.564162, -0.24309773, 1.0), (51.565517, -0.27011313, 1.0), (51.566546, -0.24677173, 10.0)], '02': [(51.53582, -0.28695587, 1.0), (51.537268, -0.31685046, 1.0), (51.541773, -0.27591674, 1.0), (51.542644, -0.30487014, 1.0), (51.546601, -0.26794617, 2.6), (51.55148, -0.28362712, 1.0), (51.560843, -0.31977446, 1.0), (51.560904, -0.25614982, 1.0), (51.562649, -0.32028499, 1.0), (51.563487, -0.27884677, 1.0), (51.564041, -0.26151241, 1.0), (51.564162, -0.24309773, 1.0), (51.565517, -0.27011313, 1.0), (51.566546, -0.24677173, 10.0)], '03': [(51.53582, -0.28695587, 1.0), (51.537268, -0.31685046, 1.0), (51.541773, -0.27591674, 1.0), (51.542644, -0.30487014, 1.0), (51.546601, -0.26794617, 2.6), (51.55148, -0.28362712, 1.0), (51.560843, -0.31977446, 1.0), (51.560904, -0.25614982, 1.0), (51.562649, -0.32028499, 1.0), (51.563487, -0.27884677, 1.0), (51.564041, -0.26151241, 1.0), (51.564162, -0.24309773, 1.0), (51.565517, -0.27011313, 1.0), (51.566546, -0.24677173, 10.0)], '04': [(51.53582, -0.28695587, 1.0), (51.537268, -0.31685046, 1.0), (51.541773, -0.27591674, 1.0), (51.542644, -0.30487014, 1.0), (51.546601, -0.26794617, 2.6), (51.55148, -0.28362712, 1.0), (51.560843, -0.31977446, 1.0), (51.560904, -0.25614982, 1.0), (51.562649, -0.32028499, 1.0), (51.563487, -0.27884677, 1.0), (51.564041, -0.26151241, 1.0), (51.564162, -0.24309773, 1.0), (51.565517, -0.27011313, 1.0), (51.566546, -0.24677173, 10.0)], '05': [(51.53582, -0.28695587, 1.0), (51.537268, -0.31685046, 1.0), (51.541773, -0.27591674, 1.0), (51.542644, -0.30487014, 1.0), (51.546601, -0.26794617, 2.6), (51.55148, -0.28362712, 1.0), (51.560843, -0.31977446, 1.0), (51.560904, -0.25614982, 1.0), (51.562649, -0.32028499, 1.0), (51.563487, -0.27884677, 1.0), (51.564041, -0.26151241, 1.0), (51.564162, -0.24309773, 1.0), (51.565517, -0.27011313, 1.0), (51.566546, -0.24677173, 10.0)], '06': [(51.53582, -0.28695587, 1.0), (51.537268, -0.31685046, 1.0), (51.541773, -0.27591674, 1.0), (51.542644, -0.30487014, 1.0), (51.546601, -0.26794617, 2.6), (51.55148, -0.28362712, 1.0), (51.560843, -0.31977446, 1.0), (51.560904, -0.25614982, 1.0), (51.562649, -0.32028499, 1.0), (51.563487, -0.27884677, 1.0), (51.564041, -0.26151241, 1.0), (51.564162, -0.24309773, 1.0), (51.565517, -0.27011313, 1.0), (51.566546, -0.24677173, 10.0)], '07': [(51.53582, -0.28695587, 1.0), (51.537268, -0.31685046, 1.0), (51.541773, -0.27591674, 1.0), (51.542644, -0.30487014, 1.0), (51.546601, -0.26794617, 2.6), (51.55148, -0.28362712, 1.0), (51.560843, -0.31977446, 1.0), (51.560904, -0.25614982, 1.0), (51.562649, -0.32028499, 1.0), (51.563487, -0.27884677, 1.0), (51.564041, -0.26151241, 1.0), (51.564162, -0.24309773, 1.0), (51.565517, -0.27011313, 1.0), (51.566546, -0.24677173, 10.0)], '08': [(51.53582, -0.28695587, 1.0), (51.537268, -0.31685046, 1.0), (51.541773, -0.27591674, 1.0), (51.542644, -0.30487014, 1.0), (51.546601, -0.26794617, 2.6), (51.55148, -0.28362712, 1.0), (51.560843, -0.31977446, 1.0), (51.560904, -0.25614982, 1.0), (51.562649, -0.32028499, 1.0), (51.563487, -0.27884677, 1.0), (51.564041, -0.26151241, 1.0), (51.564162, -0.24309773, 1.0), (51.565517, -0.27011313, 1.0), (51.566546, -0.24677173, 10.0)], '09': [(51.53582, -0.28695587, 1.0), (51.537268, -0.31685046, 1.0), (51.541773, -0.27591674, 1.0), (51.542644, -0.30487014, 1.0), (51.546601, -0.26794617, 2.6), (51.55148, -0.28362712, 1.0), (51.560843, -0.31977446, 1.0), (51.560904, -0.25614982, 1.0), (51.562649, -0.32028499, 1.0), (51.563487, -0.27884677, 1.0), (51.564041, -0.26151241, 1.0), (51.564162, -0.24309773, 1.0), (51.565517, -0.27011313, 1.0), (51.566546, -0.24677173, 10.0)], '10': [(51.53582, -0.28695587, 1.0), (51.537268, -0.31685046, 1.0), (51.541773, -0.27591674, 1.0), (51.542644, -0.30487014, 1.0), (51.546601, -0.26794617, 2.6), (51.55148, -0.28362712, 1.0), (51.560843, -0.31977446, 1.0), (51.560904, -0.25614982, 1.0), (51.562649, -0.32028499, 1.0), (51.563487, -0.27884677, 1.0), (51.564041, -0.26151241, 1.0), (51.564162, -0.24309773, 1.0), (51.565517, -0.27011313, 1.0), (51.566546, -0.24677173, 10.0)], '11': [(51.53582, -0.28695587, 1.0), (51.537268, -0.31685046, 1.0), (51.541773, -0.27591674, 1.0), (51.542644, -0.30487014, 1.0), (51.546601, -0.26794617, 2.6), (51.55148, -0.28362712, 1.0), (51.560843, -0.31977446, 1.0), (51.560904, -0.25614982, 1.0), (51.562649, -0.32028499, 1.0), (51.563487, -0.27884677, 1.0), (51.564041, -0.26151241, 1.0), (51.564162, -0.24309773, 1.0), (51.565517, -0.27011313, 1.0), (51.566546, -0.24677173, 10.0)], '12': [(51.53582, -0.28695587, 1.0), (51.537268, -0.31685046, 1.0), (51.541773, -0.27591674, 1.0), (51.542644, -0.30487014, 1.0), (51.546601, -0.26794617, 2.6), (51.55148, -0.28362712, 1.0), (51.560843, -0.31977446, 1.0), (51.560904, -0.25614982, 1.0), (51.562649, -0.32028499, 1.0), (51.563487, -0.27884677, 1.0), (51.564041, -0.26151241, 1.0), (51.564162, -0.24309773, 1.0), (51.565517, -0.27011313, 1.0), (51.566546, -0.24677173, 10.0)], '13': [(51.53582, -0.28695587, 1.0), (51.537268, -0.31685046, 1.0), (51.541773, -0.27591674, 1.0), (51.542644, -0.30487014, 1.0), (51.546601, -0.26794617, 2.6), (51.55148, -0.28362712, 1.0), (51.560843, -0.31977446, 1.0), (51.560904, -0.25614982, 1.0), (51.562649, -0.32028499, 1.0), (51.563487, -0.27884677, 1.0), (51.564041, -0.26151241, 1.0), (51.564162, -0.24309773, 1.0), (51.565517, -0.27011313, 1.0), (51.566546, -0.24677173, 10.0)], '14': [(51.53582, -0.28695587, 1.0), (51.537268, -0.31685046, 1.0), (51.541773, -0.27591674, 1.0), (51.542644, -0.30487014, 1.0), (51.546601, -0.26794617, 2.6), (51.55148, -0.28362712, 1.0), (51.560843, -0.31977446, 1.0), (51.560904, -0.25614982, 1.0), (51.562649, -0.32028499, 1.0), (51.563487, -0.27884677, 1.0), (51.564041, -0.26151241, 1.0), (51.564162, -0.24309773, 1.0), (51.565517, -0.27011313, 1.0), (51.566546, -0.24677173, 10.0)], '15': [(51.53582, -0.28695587, 1.0), (51.537268, -0.31685046, 1.0), (51.541773, -0.27591674, 1.0), (51.542644, -0.30487014, 1.0), (51.546601, -0.26794617, 2.6), (51.55148, -0.28362712, 1.0), (51.560843, -0.31977446, 1.0), (51.560904, -0.25614982, 1.0), (51.562649, -0.32028499, 1.0), (51.563487, -0.27884677, 1.0), (51.564041, -0.26151241, 1.0), (51.564162, -0.24309773, 1.0), (51.565517, -0.27011313, 1.0), (51.566546, -0.24677173, 10.0)], '16': [(51.53582, -0.28695587, 1.0), (51.537268, -0.31685046, 1.0), (51.541773, -0.27591674, 1.0), (51.542644, -0.30487014, 1.0), (51.546601, -0.26794617, 2.6), (51.55148, -0.28362712, 1.0), (51.560843, -0.31977446, 1.0), (51.560904, -0.25614982, 1.0), (51.562649, -0.32028499, 1.0), (51.563487, -0.27884677, 1.0), (51.564041, -0.26151241, 1.0), (51.564162, -0.24309773, 1.0), (51.565517, -0.27011313, 1.0), (51.566546, -0.24677173, 10.0)], '17': [(51.53582, -0.28695587, 1.0), (51.537268, -0.31685046, 1.0), (51.541773, -0.27591674, 1.0), (51.542644, -0.30487014, 1.0), (51.546601, -0.26794617, 2.6), (51.55148, -0.28362712, 1.0), (51.560843, -0.31977446, 1.0), (51.560904, -0.25614982, 1.0), (51.562649, -0.32028499, 1.0), (51.563487, -0.27884677, 1.0), (51.564041, -0.26151241, 1.0), (51.564162, -0.24309773, 1.0), (51.565517, -0.27011313, 1.0), (51.566546, -0.24677173, 10.0)], '18': [(51.53582, -0.28695587, 1.0), (51.537268, -0.31685046, 1.0), (51.541773, -0.27591674, 1.0), (51.542644, -0.30487014, 1.0), (51.546601, -0.26794617, 2.6), (51.55148, -0.28362712, 1.0), (51.560843, -0.31977446, 1.0), (51.560904, -0.25614982, 1.0), (51.562649, -0.32028499, 1.0), (51.563487, -0.27884677, 1.0), (51.564041, -0.26151241, 1.0), (51.564162, -0.24309773, 1.0), (51.565517, -0.27011313, 1.0), (51.566546, -0.24677173, 10.0)], '19': [(51.53582, -0.28695587, 1.0), (51.537268, -0.31685046, 1.0), (51.541773, -0.27591674, 1.0), (51.542644, -0.30487014, 1.0), (51.546601, -0.26794617, 2.6), (51.55148, -0.28362712, 1.0), (51.560843, -0.31977446, 1.0), (51.560904, -0.25614982, 1.0), (51.562649, -0.32028499, 1.0), (51.563487, -0.27884677, 1.0), (51.564041, -0.26151241, 1.0), (51.564162, -0.24309773, 1.0), (51.565517, -0.27011313, 1.0), (51.566546, -0.24677173, 10.0)], '20': [(51.53582, -0.28695587, 1.0), (51.537268, -0.31685046, 1.0), (51.541773, -0.27591674, 1.0), (51.542644, -0.30487014, 1.0), (51.546601, -0.26794617, 2.6), (51.55148, -0.28362712, 1.0), (51.560843, -0.31977446, 1.0), (51.560904, -0.25614982, 1.0), (51.562649, -0.32028499, 1.0), (51.563487, -0.27884677, 1.0), (51.564041, -0.26151241, 1.0), (51.564162, -0.24309773, 1.0), (51.565517, -0.27011313, 1.0), (51.566546, -0.24677173, 10.0)], '21': [(51.53582, -0.28695587, 1.0), (51.537268, -0.31685046, 1.0), (51.541773, -0.27591674, 1.0), (51.542644, -0.30487014, 1.0), (51.546601, -0.26794617, 2.6), (51.55148, -0.28362712, 1.0), (51.560843, -0.31977446, 1.0), (51.560904, -0.25614982, 1.0), (51.562649, -0.32028499, 1.0), (51.563487, -0.27884677, 1.0), (51.564041, -0.26151241, 1.0), (51.564162, -0.24309773, 1.0), (51.565517, -0.27011313, 1.0), (51.566546, -0.24677173, 10.0)], '22': [(51.53582, -0.28695587, 1.0), (51.537268, -0.31685046, 1.0), (51.541773, -0.27591674, 1.0), (51.542644, -0.30487014, 1.0), (51.546601, -0.26794617, 2.6), (51.55148, -0.28362712, 1.0), (51.560843, -0.31977446, 1.0), (51.560904, -0.25614982, 1.0), (51.562649, -0.32028499, 1.0), (51.563487, -0.27884677, 1.0), (51.564041, -0.26151241, 1.0), (51.564162, -0.24309773, 1.0), (51.565517, -0.27011313, 1.0), (51.566546, -0.24677173, 10.0)], '23': [(51.53582, -0.28695587, 1.0), (51.537268, -0.31685046, 1.0), (51.541773, -0.27591674, 1.0), (51.542644, -0.30487014, 1.0), (51.546601, -0.26794617, 2.6), (51.55148, -0.28362712, 1.0), (51.560843, -0.31977446, 1.0), (51.560904, -0.25614982, 1.0), (51.562649, -0.32028499, 1.0), (51.563487, -0.27884677, 1.0), (51.564041, -0.26151241, 1.0), (51.564162, -0.24309773, 1.0), (51.565517, -0.27011313, 1.0), (51.566546, -0.24677173, 10.0)]}
@app.route("/getData")
def getStuff():
    #user = User.query.get_or_404(id)
    return lazy
def read_contents(date):
    # "times" : [(lat long, score)]
    times = {}
    df = pandas.read_csv("data.csv")
    
    for index, row in df.iterrows():
        #print(row["datetime"][0:10])
        if row["datetime"][0:10] == date:
            t = str(row["datetime"][11:13])
            if(t in times):
                times[t].append((row["latitude"], row["longitude"], row["score"]))
            else:
                times[t] = [(row["latitude"], row["longitude"], row["score"])]
    print(times)
if __name__=="__main__":
    
    date = "2022-06-18"
    #read_contents(date)
    # for key in lazy:
    #     if key in ["07", "08"]:
    #         for tup in lazy[key]:
    #             tup = (tup[0], tup[1], tup[2] + 5)
    #     if key in ["16", "17", "18"]:
    #         for tup in lazy[key]:
    #             tup = (tup[0], tup[1], tup[2] - 5)
    # print(lazy)


